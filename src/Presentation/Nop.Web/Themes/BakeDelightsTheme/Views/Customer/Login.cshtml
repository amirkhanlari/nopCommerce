@model LoginModel
@using System.Net
@using Nop.Core
@inject IWebHelper webHelper
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Login").Text);
    //page class
    Html.AppendPageCssClassParts("html-login-page");

    //register URL with return URL (if specified)
    var registerUrl = Url.RouteUrl("Register");
    if (!string.IsNullOrEmpty(this.Context.Request.Query["returnUrl"]))
    {
        registerUrl = webHelper.ModifyQueryString(registerUrl, "returnurl=" + WebUtility.UrlEncode(this.Context.Request.Query["returnUrl"]), null);
    }
}
<div class="page login-page">
    <div class="page-title panel-heading">
        @T("Account.Login.Welcome")
    </div>
    <div class="row">
        <div class="col-sm-12 col-md-12">
            @await Component.InvokeAsync("TopicBlock", new { systemName = "LoginRegistrationInfo" })
        </div>
    </div>
    @await Html.PartialAsync("_ExternalAuthentication.Errors")
    <div class="page-body">
        <div class="customer-blocks">
            <div class="row">
                <div class="col-sm-12 col-md-12">
                    <div class="col-sm-6 col-md-6 col-lg-6 returning-wrapper">
                        <fieldset>
                            <legend class="fieldsetheader">@T("Account.Login.ReturningCustomer")</legend>
                            <div class="form-fields form-horizontal">
                                <form asp-route="Login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" method="post">
                                    <div asp-validation-summary="ModelOnly" class="message-error alert alert-danger">@T("Account.Login.Unsuccessful")</div>
                                    @if (Model.UsernamesEnabled)
                                    {
                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <label class="control-label" asp-for="Username" asp-postfix=":"></label>
                                                <input asp-for="Username" class="username form-control" autofocus="autofocus"/>
                                                <span asp-validation-for="Username"></span>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <div class="col-md-12 email ">
                                                <label class="control-label" asp-for="Email" asp-postfix=":"></label>
                                                <input asp-for="Email" class="form-control" autofocus="autofocus"/>
                                                <span asp-validation-for="Email"></span>
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group">
                                        <div class="col-md-12 password">
                                            <label class="control-label" asp-for="Password" asp-postfix=":"></label>
                                            <input asp-for="Password" class="form-control"/>
                                            <span asp-validation-for="Password"></span>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="remember-me">
                                            <div class="checkbox">
                                                <input class="checkbox" asp-for="RememberMe" />
                                                <label class="remember-text" asp-for="RememberMe"></label>
                                                <span class="forgot-password">
                                                    <a asp-route="PasswordRecovery">@T("Account.Login.ForgotPassword")</a>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    @if (Model.DisplayCaptcha)
                                    {
                                        <div class="form-group">
                                            <div class="captcha-box col-md-6">
                                                <nop-captcha />
                                            </div>
                                        </div>
                                    }
                                    <div class="form-group">
                                        <div class="col-md-12 btn btn-primary fa fa-user">
                                            <input class="login-button" type="submit" value="@T("Account.Login.LoginButton")"/>
                                        </div>
                                    </div>
                                </form>
                            </div>
                            @if (Model.CheckoutAsGuest)
                            {
                                <div class="col-sm-6 col-md-6">
                                    <div class="new-wrapper checkout-as-guest-or-register-block">

                                        <div class="text">
                                            @await Component.InvokeAsync("TopicBlock", new { systemName = "CheckoutAsGuestOrRegister" })
                                            <div class="buttons buttons col-sm-offset-1 col-md-offset-1 col-md-10">
                                                <input type="button" class="btn btn-primary checkout-as-guest-button" onclick="location.href = '@Url.RouteUrl("Checkout")'" value="@T("Account.Login.CheckoutAsGuest")" />
                                                <a class="btn btn-primary register-button" href='@registerUrl'>@T("Account.Register")</a>
                                            </div>
                                        </div>
                                    </div></div>
                            }
                            else
                            {
                                <div class="col-sm-12 col-md-12">
                                    <div class="register-block">
                                            <div class="text">
                                                @T("Account.Login.NewCustomerText")
                                                        <a class="register-button" target="_blank" href='@registerUrl'>@T("PageLogin.Account.Register")</a>
                                                    </div>
                                    </div>
                                </div>
                            }
                        </fieldset>
                    </div>
                </div>
              

            </div>
           <div class="row">
                <div class="external-authentication col-sm-12 col-md-12">
                    @await Component.InvokeAsync("ExternalMethods", "ExternalAuthentication")
                </div>
            </div>
        </div>
    </div> 
</div>
