@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
<div class="footer">
    <div class="footer-upper">
    </div>
    <div class="footer-middle" id="footer-middle">
        <div class="container">
            <div class="row">
                <div class="column my-account col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <span class="fa fa-angle-down visible-xs"></span>

                    <div class="title">

                        <strong>@T("Footer.MyAccount")</strong>
                    </div>
                    <ul class="nav nav-list">
                        @if (Model.DisplayCustomerInfoFooterItem)
                        {

                            <li><a href="@Url.RouteUrl("CustomerInfo")"><i class="fa fa-angle-double-left"></i>@T("Account.MyAccount")</a></li>
                        }
                        @if (Model.DisplayCustomerOrdersFooterItem)
                        {

                            <li><a href="@Url.RouteUrl("CustomerOrders")"><i class="fa fa-angle-double-left"></i>@T("Account.CustomerOrders")</a></li>
                        }
                        @if (Model.DisplayCustomerAddressesFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("CustomerAddresses")"><i class="fa fa-angle-double-left"></i>@T("Account.CustomerAddresses")</a></li>
                        }
                        @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ShoppingCart")"><i class="fa fa-angle-double-left"></i>@T("ShoppingCart")</a></li>
                        }
                        @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Wishlist")"><i class="fa fa-angle-double-left"></i>@T("Wishlist")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})"><i class="fa fa-angle-double-left"></i>@topic.Name</a></li>
                        }
                    </ul>
                </div>
                <div class="column customer-service col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <span class="fa fa-angle-down visible-xs"></span>

                    <div class="title">
                        <strong>@T("Footer.CustomerService")</strong>
                    </div>
                    <ul class="nav nav-list">
                        @if (Model.NewsEnabled && Model.DisplayNewsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("NewsArchive")"><i class="fa fa-angle-double-left"></i>@T("News")</a></li>
                        }
                        @if (Model.BlogEnabled && Model.DisplayBlogFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Blog")"><i class="fa fa-angle-double-left"></i>@T("Blog")</a></li>
                        }
                        @if (Model.ForumEnabled && Model.DisplayForumsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Boards")"><i class="fa fa-angle-double-left"></i>@T("Forum.Forums")</a></li>
                        }
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn2).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })"><i class="fa fa-angle-double-left"></i>@topic.Name</a></li>
                        }
                        @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("Sitemap")"><i class="fa fa-angle-double-left"></i>@T("Sitemap")</a></li>
                        }
                        @if (Model.DisplayContactUsFooterItem)
                        {
                            <li><a href="@Url.RouteUrl("ContactUs")"><i class="fa fa-angle-double-left"></i>@T("ContactUs")</a></li>
                        }
                    </ul>
                </div>
                <div class="column information col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <span class="fa fa-angle-down visible-xs"></span>

                    <div class="title">
                        <strong>@T("Footer.Information")</strong>
                    </div>
                    <ul class="nav nav-list">
                        @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                        {
                            <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })"><i class="fa fa-angle-double-left"></i>@topic.Name</a></li>
                        }
                        @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem && Model.IsAuthenticated)
                        {
                            <li><a href="@Url.RouteUrl("ApplyVendorAccount")"><i class="fa fa-angle-double-left"></i>@T("Vendors.ApplyAccount")</a></li>
                        }
                    </ul>
                </div>

                <div class="col-xs-12 col-sm-12 col-md-3 col-lg-3">
                    <div class="column contact-wrapper col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <span class="fa fa-angle-down visible-xs"></span>

                        <div class="title">
                            <strong>@T("Followus")</strong>
                        </div>
                        @await Component.InvokeAsync("SocialButtons")
                    </div>
                    <div class="column payment-method col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <span class="fa fa-angle-down visible-xs"></span>

                        <div class="title">
                            <strong>@T("payment-method")</strong>
                        </div>

                        <ul class="nav nav-list">
                            <li class="payment-method1"></li>
                            @*<li class="payment-method2"></li>
                <li class="payment-method3"></li>
                <li class="payment-method4"></li>
                <li class="payment-method5"></li>*@

                    </div>

                    <div class="column newsletter-wrapper col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <span class="fa fa-angle-down visible-xs"></span>

                        <div class="title">
                            <strong>@T("Newsletter.Title")</strong>
                        </div>
                        @await Component.InvokeAsync("NewsletterBox")
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="footer-lower">
        <div class="container">
            <div class="row">

                <div class="col-xs-12 col-sm-12 col-md-8 col-lg-8 footer-store-theme">
                    <div class="footer-disclaimer">
                        @T("Content.CopyrightNotice", DateTime.Now.Year.ToString(), Model.StoreName)
                    </div>
                    @await Component.InvokeAsync("StoreThemeSelector")
                </div>
                <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4">
                    <div class="footer-information">
                        @if (Model.DisplayTaxShippingInfoFooter)
                        {
                            var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                            <span class="footer-tax-shipping">
                                @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                            </span>
                        }
                    </div>
                    @if (!Model.HidePoweredByNopCommerce)
                    {
                        <div class="poweredby">
                            @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                                Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                            @T("Content.PoweredBy") <a href="https://www.nopcommerce.com/">@T("Content.nopCommerce")</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = "footer" })
</div>

<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        $("#footer-middle .column .fa-angle-down").click(function () {
            var $this = $(this);
            $this.siblings("ul.nav-list").slideToggle("slow", function () {
                if ($this.siblings("ul.nav-list").css('display') == 'block')
                    $this.addClass("rotate");
                else if ($this.siblings("ul.nav-list").css('display') == 'none')
                    $this.removeClass("rotate");
            });
        });
    });
</script>

